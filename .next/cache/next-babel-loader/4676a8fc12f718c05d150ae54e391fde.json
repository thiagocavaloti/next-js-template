{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport theme from '../theme';\nimport initStore from '../utils/store';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(Provider, {\n      store: store\n    }, __jsx(Component, _extends({}, pageProps, {\n      className: \"jsx-90109643\" + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\")\n    })), __jsx(_JSXStyle, {\n      id: \"90109643\"\n    }, [\"@font-face{font-family:'Roboto Condensed';src:url('/fonts/RobotoCondensed-Regular.ttf');}\"])));\n  }\n\n}\n\nexport default withRedux(initStore)(MyApp);","map":null,"metadata":{},"sourceType":"module"}